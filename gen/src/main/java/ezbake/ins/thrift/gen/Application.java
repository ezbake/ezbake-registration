/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package ezbake.ins.thrift.gen;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Application implements org.apache.thrift.TBase<Application, Application._Fields>, java.io.Serializable, Cloneable, Comparable<Application> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Application");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField APP_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("appName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField POC_FIELD_DESC = new org.apache.thrift.protocol.TField("poc", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ALLOWED_USERS_FIELD_DESC = new org.apache.thrift.protocol.TField("allowedUsers", org.apache.thrift.protocol.TType.SET, (short)4);
  private static final org.apache.thrift.protocol.TField CATEGORIES_FIELD_DESC = new org.apache.thrift.protocol.TField("categories", org.apache.thrift.protocol.TType.MAP, (short)5);
  private static final org.apache.thrift.protocol.TField FEED_PIPELINES_FIELD_DESC = new org.apache.thrift.protocol.TField("feedPipelines", org.apache.thrift.protocol.TType.SET, (short)6);
  private static final org.apache.thrift.protocol.TField LISTENER_PIPELINES_FIELD_DESC = new org.apache.thrift.protocol.TField("listenerPipelines", org.apache.thrift.protocol.TType.SET, (short)7);
  private static final org.apache.thrift.protocol.TField WEB_APP_FIELD_DESC = new org.apache.thrift.protocol.TField("webApp", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField AUTHORIZATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("authorizations", org.apache.thrift.protocol.TType.SET, (short)9);
  private static final org.apache.thrift.protocol.TField AUTHORIZATION_BUILDER_FIELD_DESC = new org.apache.thrift.protocol.TField("authorizationBuilder", org.apache.thrift.protocol.TType.MAP, (short)10);
  private static final org.apache.thrift.protocol.TField INTENT_SERVICE_MAP_FIELD_DESC = new org.apache.thrift.protocol.TField("intentServiceMap", org.apache.thrift.protocol.TType.MAP, (short)11);
  private static final org.apache.thrift.protocol.TField JOB_REGISTRATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("jobRegistrations", org.apache.thrift.protocol.TType.SET, (short)12);
  private static final org.apache.thrift.protocol.TField APP_ICON_SRC_FIELD_DESC = new org.apache.thrift.protocol.TField("appIconSrc", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField SPONSORING_ORGANIZATION_FIELD_DESC = new org.apache.thrift.protocol.TField("sponsoringOrganization", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField COMMUNITY_AUTHORIZATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("communityAuthorizations", org.apache.thrift.protocol.TType.SET, (short)15);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ApplicationStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ApplicationTupleSchemeFactory());
  }

  public String id; // optional
  public String appName; // optional
  public String poc; // optional
  public Set<String> allowedUsers; // optional
  public Map<String,String> categories; // optional
  public Set<FeedPipeline> feedPipelines; // optional
  public Set<ListenerPipeline> listenerPipelines; // optional
  public WebApplication webApp; // optional
  public Set<String> authorizations; // optional
  public Map<String,Set<String>> authorizationBuilder; // optional
  public Map<String,String> intentServiceMap; // optional
  public Set<JobRegistration> jobRegistrations; // optional
  public String appIconSrc; // optional
  public String sponsoringOrganization; // optional
  public Set<String> communityAuthorizations; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    APP_NAME((short)2, "appName"),
    POC((short)3, "poc"),
    ALLOWED_USERS((short)4, "allowedUsers"),
    CATEGORIES((short)5, "categories"),
    FEED_PIPELINES((short)6, "feedPipelines"),
    LISTENER_PIPELINES((short)7, "listenerPipelines"),
    WEB_APP((short)8, "webApp"),
    AUTHORIZATIONS((short)9, "authorizations"),
    AUTHORIZATION_BUILDER((short)10, "authorizationBuilder"),
    INTENT_SERVICE_MAP((short)11, "intentServiceMap"),
    JOB_REGISTRATIONS((short)12, "jobRegistrations"),
    APP_ICON_SRC((short)13, "appIconSrc"),
    SPONSORING_ORGANIZATION((short)14, "sponsoringOrganization"),
    COMMUNITY_AUTHORIZATIONS((short)15, "communityAuthorizations");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // APP_NAME
          return APP_NAME;
        case 3: // POC
          return POC;
        case 4: // ALLOWED_USERS
          return ALLOWED_USERS;
        case 5: // CATEGORIES
          return CATEGORIES;
        case 6: // FEED_PIPELINES
          return FEED_PIPELINES;
        case 7: // LISTENER_PIPELINES
          return LISTENER_PIPELINES;
        case 8: // WEB_APP
          return WEB_APP;
        case 9: // AUTHORIZATIONS
          return AUTHORIZATIONS;
        case 10: // AUTHORIZATION_BUILDER
          return AUTHORIZATION_BUILDER;
        case 11: // INTENT_SERVICE_MAP
          return INTENT_SERVICE_MAP;
        case 12: // JOB_REGISTRATIONS
          return JOB_REGISTRATIONS;
        case 13: // APP_ICON_SRC
          return APP_ICON_SRC;
        case 14: // SPONSORING_ORGANIZATION
          return SPONSORING_ORGANIZATION;
        case 15: // COMMUNITY_AUTHORIZATIONS
          return COMMUNITY_AUTHORIZATIONS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private _Fields optionals[] = {_Fields.ID,_Fields.APP_NAME,_Fields.POC,_Fields.ALLOWED_USERS,_Fields.CATEGORIES,_Fields.FEED_PIPELINES,_Fields.LISTENER_PIPELINES,_Fields.WEB_APP,_Fields.AUTHORIZATIONS,_Fields.AUTHORIZATION_BUILDER,_Fields.INTENT_SERVICE_MAP,_Fields.JOB_REGISTRATIONS,_Fields.APP_ICON_SRC,_Fields.SPONSORING_ORGANIZATION,_Fields.COMMUNITY_AUTHORIZATIONS};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_NAME, new org.apache.thrift.meta_data.FieldMetaData("appName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POC, new org.apache.thrift.meta_data.FieldMetaData("poc", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ALLOWED_USERS, new org.apache.thrift.meta_data.FieldMetaData("allowedUsers", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.CATEGORIES, new org.apache.thrift.meta_data.FieldMetaData("categories", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.FEED_PIPELINES, new org.apache.thrift.meta_data.FieldMetaData("feedPipelines", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, FeedPipeline.class))));
    tmpMap.put(_Fields.LISTENER_PIPELINES, new org.apache.thrift.meta_data.FieldMetaData("listenerPipelines", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ListenerPipeline.class))));
    tmpMap.put(_Fields.WEB_APP, new org.apache.thrift.meta_data.FieldMetaData("webApp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, WebApplication.class)));
    tmpMap.put(_Fields.AUTHORIZATIONS, new org.apache.thrift.meta_data.FieldMetaData("authorizations", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.AUTHORIZATION_BUILDER, new org.apache.thrift.meta_data.FieldMetaData("authorizationBuilder", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)))));
    tmpMap.put(_Fields.INTENT_SERVICE_MAP, new org.apache.thrift.meta_data.FieldMetaData("intentServiceMap", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.JOB_REGISTRATIONS, new org.apache.thrift.meta_data.FieldMetaData("jobRegistrations", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, JobRegistration.class))));
    tmpMap.put(_Fields.APP_ICON_SRC, new org.apache.thrift.meta_data.FieldMetaData("appIconSrc", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SPONSORING_ORGANIZATION, new org.apache.thrift.meta_data.FieldMetaData("sponsoringOrganization", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMMUNITY_AUTHORIZATIONS, new org.apache.thrift.meta_data.FieldMetaData("communityAuthorizations", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Application.class, metaDataMap);
  }

  public Application() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Application(Application other) {
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetAppName()) {
      this.appName = other.appName;
    }
    if (other.isSetPoc()) {
      this.poc = other.poc;
    }
    if (other.isSetAllowedUsers()) {
      Set<String> __this__allowedUsers = new HashSet<String>(other.allowedUsers);
      this.allowedUsers = __this__allowedUsers;
    }
    if (other.isSetCategories()) {
      Map<String,String> __this__categories = new HashMap<String,String>(other.categories);
      this.categories = __this__categories;
    }
    if (other.isSetFeedPipelines()) {
      Set<FeedPipeline> __this__feedPipelines = new HashSet<FeedPipeline>(other.feedPipelines.size());
      for (FeedPipeline other_element : other.feedPipelines) {
        __this__feedPipelines.add(new FeedPipeline(other_element));
      }
      this.feedPipelines = __this__feedPipelines;
    }
    if (other.isSetListenerPipelines()) {
      Set<ListenerPipeline> __this__listenerPipelines = new HashSet<ListenerPipeline>(other.listenerPipelines.size());
      for (ListenerPipeline other_element : other.listenerPipelines) {
        __this__listenerPipelines.add(new ListenerPipeline(other_element));
      }
      this.listenerPipelines = __this__listenerPipelines;
    }
    if (other.isSetWebApp()) {
      this.webApp = new WebApplication(other.webApp);
    }
    if (other.isSetAuthorizations()) {
      Set<String> __this__authorizations = new HashSet<String>(other.authorizations);
      this.authorizations = __this__authorizations;
    }
    if (other.isSetAuthorizationBuilder()) {
      Map<String,Set<String>> __this__authorizationBuilder = new HashMap<String,Set<String>>(other.authorizationBuilder.size());
      for (Map.Entry<String, Set<String>> other_element : other.authorizationBuilder.entrySet()) {

        String other_element_key = other_element.getKey();
        Set<String> other_element_value = other_element.getValue();

        String __this__authorizationBuilder_copy_key = other_element_key;

        Set<String> __this__authorizationBuilder_copy_value = new HashSet<String>(other_element_value);

        __this__authorizationBuilder.put(__this__authorizationBuilder_copy_key, __this__authorizationBuilder_copy_value);
      }
      this.authorizationBuilder = __this__authorizationBuilder;
    }
    if (other.isSetIntentServiceMap()) {
      Map<String,String> __this__intentServiceMap = new HashMap<String,String>(other.intentServiceMap);
      this.intentServiceMap = __this__intentServiceMap;
    }
    if (other.isSetJobRegistrations()) {
      Set<JobRegistration> __this__jobRegistrations = new HashSet<JobRegistration>(other.jobRegistrations.size());
      for (JobRegistration other_element : other.jobRegistrations) {
        __this__jobRegistrations.add(new JobRegistration(other_element));
      }
      this.jobRegistrations = __this__jobRegistrations;
    }
    if (other.isSetAppIconSrc()) {
      this.appIconSrc = other.appIconSrc;
    }
    if (other.isSetSponsoringOrganization()) {
      this.sponsoringOrganization = other.sponsoringOrganization;
    }
    if (other.isSetCommunityAuthorizations()) {
      Set<String> __this__communityAuthorizations = new HashSet<String>(other.communityAuthorizations);
      this.communityAuthorizations = __this__communityAuthorizations;
    }
  }

  public Application deepCopy() {
    return new Application(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.appName = null;
    this.poc = null;
    this.allowedUsers = null;
    this.categories = null;
    this.feedPipelines = null;
    this.listenerPipelines = null;
    this.webApp = null;
    this.authorizations = null;
    this.authorizationBuilder = null;
    this.intentServiceMap = null;
    this.jobRegistrations = null;
    this.appIconSrc = null;
    this.sponsoringOrganization = null;
    this.communityAuthorizations = null;
  }

  public String getId() {
    return this.id;
  }

  public Application setId(String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public String getAppName() {
    return this.appName;
  }

  public Application setAppName(String appName) {
    this.appName = appName;
    return this;
  }

  public void unsetAppName() {
    this.appName = null;
  }

  /** Returns true if field appName is set (has been assigned a value) and false otherwise */
  public boolean isSetAppName() {
    return this.appName != null;
  }

  public void setAppNameIsSet(boolean value) {
    if (!value) {
      this.appName = null;
    }
  }

  public String getPoc() {
    return this.poc;
  }

  public Application setPoc(String poc) {
    this.poc = poc;
    return this;
  }

  public void unsetPoc() {
    this.poc = null;
  }

  /** Returns true if field poc is set (has been assigned a value) and false otherwise */
  public boolean isSetPoc() {
    return this.poc != null;
  }

  public void setPocIsSet(boolean value) {
    if (!value) {
      this.poc = null;
    }
  }

  public int getAllowedUsersSize() {
    return (this.allowedUsers == null) ? 0 : this.allowedUsers.size();
  }

  public java.util.Iterator<String> getAllowedUsersIterator() {
    return (this.allowedUsers == null) ? null : this.allowedUsers.iterator();
  }

  public void addToAllowedUsers(String elem) {
    if (this.allowedUsers == null) {
      this.allowedUsers = new HashSet<String>();
    }
    this.allowedUsers.add(elem);
  }

  public Set<String> getAllowedUsers() {
    return this.allowedUsers;
  }

  public Application setAllowedUsers(Set<String> allowedUsers) {
    this.allowedUsers = allowedUsers;
    return this;
  }

  public void unsetAllowedUsers() {
    this.allowedUsers = null;
  }

  /** Returns true if field allowedUsers is set (has been assigned a value) and false otherwise */
  public boolean isSetAllowedUsers() {
    return this.allowedUsers != null;
  }

  public void setAllowedUsersIsSet(boolean value) {
    if (!value) {
      this.allowedUsers = null;
    }
  }

  public int getCategoriesSize() {
    return (this.categories == null) ? 0 : this.categories.size();
  }

  public void putToCategories(String key, String val) {
    if (this.categories == null) {
      this.categories = new HashMap<String,String>();
    }
    this.categories.put(key, val);
  }

  public Map<String,String> getCategories() {
    return this.categories;
  }

  public Application setCategories(Map<String,String> categories) {
    this.categories = categories;
    return this;
  }

  public void unsetCategories() {
    this.categories = null;
  }

  /** Returns true if field categories is set (has been assigned a value) and false otherwise */
  public boolean isSetCategories() {
    return this.categories != null;
  }

  public void setCategoriesIsSet(boolean value) {
    if (!value) {
      this.categories = null;
    }
  }

  public int getFeedPipelinesSize() {
    return (this.feedPipelines == null) ? 0 : this.feedPipelines.size();
  }

  public java.util.Iterator<FeedPipeline> getFeedPipelinesIterator() {
    return (this.feedPipelines == null) ? null : this.feedPipelines.iterator();
  }

  public void addToFeedPipelines(FeedPipeline elem) {
    if (this.feedPipelines == null) {
      this.feedPipelines = new HashSet<FeedPipeline>();
    }
    this.feedPipelines.add(elem);
  }

  public Set<FeedPipeline> getFeedPipelines() {
    return this.feedPipelines;
  }

  public Application setFeedPipelines(Set<FeedPipeline> feedPipelines) {
    this.feedPipelines = feedPipelines;
    return this;
  }

  public void unsetFeedPipelines() {
    this.feedPipelines = null;
  }

  /** Returns true if field feedPipelines is set (has been assigned a value) and false otherwise */
  public boolean isSetFeedPipelines() {
    return this.feedPipelines != null;
  }

  public void setFeedPipelinesIsSet(boolean value) {
    if (!value) {
      this.feedPipelines = null;
    }
  }

  public int getListenerPipelinesSize() {
    return (this.listenerPipelines == null) ? 0 : this.listenerPipelines.size();
  }

  public java.util.Iterator<ListenerPipeline> getListenerPipelinesIterator() {
    return (this.listenerPipelines == null) ? null : this.listenerPipelines.iterator();
  }

  public void addToListenerPipelines(ListenerPipeline elem) {
    if (this.listenerPipelines == null) {
      this.listenerPipelines = new HashSet<ListenerPipeline>();
    }
    this.listenerPipelines.add(elem);
  }

  public Set<ListenerPipeline> getListenerPipelines() {
    return this.listenerPipelines;
  }

  public Application setListenerPipelines(Set<ListenerPipeline> listenerPipelines) {
    this.listenerPipelines = listenerPipelines;
    return this;
  }

  public void unsetListenerPipelines() {
    this.listenerPipelines = null;
  }

  /** Returns true if field listenerPipelines is set (has been assigned a value) and false otherwise */
  public boolean isSetListenerPipelines() {
    return this.listenerPipelines != null;
  }

  public void setListenerPipelinesIsSet(boolean value) {
    if (!value) {
      this.listenerPipelines = null;
    }
  }

  public WebApplication getWebApp() {
    return this.webApp;
  }

  public Application setWebApp(WebApplication webApp) {
    this.webApp = webApp;
    return this;
  }

  public void unsetWebApp() {
    this.webApp = null;
  }

  /** Returns true if field webApp is set (has been assigned a value) and false otherwise */
  public boolean isSetWebApp() {
    return this.webApp != null;
  }

  public void setWebAppIsSet(boolean value) {
    if (!value) {
      this.webApp = null;
    }
  }

  public int getAuthorizationsSize() {
    return (this.authorizations == null) ? 0 : this.authorizations.size();
  }

  public java.util.Iterator<String> getAuthorizationsIterator() {
    return (this.authorizations == null) ? null : this.authorizations.iterator();
  }

  public void addToAuthorizations(String elem) {
    if (this.authorizations == null) {
      this.authorizations = new HashSet<String>();
    }
    this.authorizations.add(elem);
  }

  public Set<String> getAuthorizations() {
    return this.authorizations;
  }

  public Application setAuthorizations(Set<String> authorizations) {
    this.authorizations = authorizations;
    return this;
  }

  public void unsetAuthorizations() {
    this.authorizations = null;
  }

  /** Returns true if field authorizations is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthorizations() {
    return this.authorizations != null;
  }

  public void setAuthorizationsIsSet(boolean value) {
    if (!value) {
      this.authorizations = null;
    }
  }

  public int getAuthorizationBuilderSize() {
    return (this.authorizationBuilder == null) ? 0 : this.authorizationBuilder.size();
  }

  public void putToAuthorizationBuilder(String key, Set<String> val) {
    if (this.authorizationBuilder == null) {
      this.authorizationBuilder = new HashMap<String,Set<String>>();
    }
    this.authorizationBuilder.put(key, val);
  }

  public Map<String,Set<String>> getAuthorizationBuilder() {
    return this.authorizationBuilder;
  }

  public Application setAuthorizationBuilder(Map<String,Set<String>> authorizationBuilder) {
    this.authorizationBuilder = authorizationBuilder;
    return this;
  }

  public void unsetAuthorizationBuilder() {
    this.authorizationBuilder = null;
  }

  /** Returns true if field authorizationBuilder is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthorizationBuilder() {
    return this.authorizationBuilder != null;
  }

  public void setAuthorizationBuilderIsSet(boolean value) {
    if (!value) {
      this.authorizationBuilder = null;
    }
  }

  public int getIntentServiceMapSize() {
    return (this.intentServiceMap == null) ? 0 : this.intentServiceMap.size();
  }

  public void putToIntentServiceMap(String key, String val) {
    if (this.intentServiceMap == null) {
      this.intentServiceMap = new HashMap<String,String>();
    }
    this.intentServiceMap.put(key, val);
  }

  public Map<String,String> getIntentServiceMap() {
    return this.intentServiceMap;
  }

  public Application setIntentServiceMap(Map<String,String> intentServiceMap) {
    this.intentServiceMap = intentServiceMap;
    return this;
  }

  public void unsetIntentServiceMap() {
    this.intentServiceMap = null;
  }

  /** Returns true if field intentServiceMap is set (has been assigned a value) and false otherwise */
  public boolean isSetIntentServiceMap() {
    return this.intentServiceMap != null;
  }

  public void setIntentServiceMapIsSet(boolean value) {
    if (!value) {
      this.intentServiceMap = null;
    }
  }

  public int getJobRegistrationsSize() {
    return (this.jobRegistrations == null) ? 0 : this.jobRegistrations.size();
  }

  public java.util.Iterator<JobRegistration> getJobRegistrationsIterator() {
    return (this.jobRegistrations == null) ? null : this.jobRegistrations.iterator();
  }

  public void addToJobRegistrations(JobRegistration elem) {
    if (this.jobRegistrations == null) {
      this.jobRegistrations = new HashSet<JobRegistration>();
    }
    this.jobRegistrations.add(elem);
  }

  public Set<JobRegistration> getJobRegistrations() {
    return this.jobRegistrations;
  }

  public Application setJobRegistrations(Set<JobRegistration> jobRegistrations) {
    this.jobRegistrations = jobRegistrations;
    return this;
  }

  public void unsetJobRegistrations() {
    this.jobRegistrations = null;
  }

  /** Returns true if field jobRegistrations is set (has been assigned a value) and false otherwise */
  public boolean isSetJobRegistrations() {
    return this.jobRegistrations != null;
  }

  public void setJobRegistrationsIsSet(boolean value) {
    if (!value) {
      this.jobRegistrations = null;
    }
  }

  public String getAppIconSrc() {
    return this.appIconSrc;
  }

  public Application setAppIconSrc(String appIconSrc) {
    this.appIconSrc = appIconSrc;
    return this;
  }

  public void unsetAppIconSrc() {
    this.appIconSrc = null;
  }

  /** Returns true if field appIconSrc is set (has been assigned a value) and false otherwise */
  public boolean isSetAppIconSrc() {
    return this.appIconSrc != null;
  }

  public void setAppIconSrcIsSet(boolean value) {
    if (!value) {
      this.appIconSrc = null;
    }
  }

  public String getSponsoringOrganization() {
    return this.sponsoringOrganization;
  }

  public Application setSponsoringOrganization(String sponsoringOrganization) {
    this.sponsoringOrganization = sponsoringOrganization;
    return this;
  }

  public void unsetSponsoringOrganization() {
    this.sponsoringOrganization = null;
  }

  /** Returns true if field sponsoringOrganization is set (has been assigned a value) and false otherwise */
  public boolean isSetSponsoringOrganization() {
    return this.sponsoringOrganization != null;
  }

  public void setSponsoringOrganizationIsSet(boolean value) {
    if (!value) {
      this.sponsoringOrganization = null;
    }
  }

  public int getCommunityAuthorizationsSize() {
    return (this.communityAuthorizations == null) ? 0 : this.communityAuthorizations.size();
  }

  public java.util.Iterator<String> getCommunityAuthorizationsIterator() {
    return (this.communityAuthorizations == null) ? null : this.communityAuthorizations.iterator();
  }

  public void addToCommunityAuthorizations(String elem) {
    if (this.communityAuthorizations == null) {
      this.communityAuthorizations = new HashSet<String>();
    }
    this.communityAuthorizations.add(elem);
  }

  public Set<String> getCommunityAuthorizations() {
    return this.communityAuthorizations;
  }

  public Application setCommunityAuthorizations(Set<String> communityAuthorizations) {
    this.communityAuthorizations = communityAuthorizations;
    return this;
  }

  public void unsetCommunityAuthorizations() {
    this.communityAuthorizations = null;
  }

  /** Returns true if field communityAuthorizations is set (has been assigned a value) and false otherwise */
  public boolean isSetCommunityAuthorizations() {
    return this.communityAuthorizations != null;
  }

  public void setCommunityAuthorizationsIsSet(boolean value) {
    if (!value) {
      this.communityAuthorizations = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((String)value);
      }
      break;

    case APP_NAME:
      if (value == null) {
        unsetAppName();
      } else {
        setAppName((String)value);
      }
      break;

    case POC:
      if (value == null) {
        unsetPoc();
      } else {
        setPoc((String)value);
      }
      break;

    case ALLOWED_USERS:
      if (value == null) {
        unsetAllowedUsers();
      } else {
        setAllowedUsers((Set<String>)value);
      }
      break;

    case CATEGORIES:
      if (value == null) {
        unsetCategories();
      } else {
        setCategories((Map<String,String>)value);
      }
      break;

    case FEED_PIPELINES:
      if (value == null) {
        unsetFeedPipelines();
      } else {
        setFeedPipelines((Set<FeedPipeline>)value);
      }
      break;

    case LISTENER_PIPELINES:
      if (value == null) {
        unsetListenerPipelines();
      } else {
        setListenerPipelines((Set<ListenerPipeline>)value);
      }
      break;

    case WEB_APP:
      if (value == null) {
        unsetWebApp();
      } else {
        setWebApp((WebApplication)value);
      }
      break;

    case AUTHORIZATIONS:
      if (value == null) {
        unsetAuthorizations();
      } else {
        setAuthorizations((Set<String>)value);
      }
      break;

    case AUTHORIZATION_BUILDER:
      if (value == null) {
        unsetAuthorizationBuilder();
      } else {
        setAuthorizationBuilder((Map<String,Set<String>>)value);
      }
      break;

    case INTENT_SERVICE_MAP:
      if (value == null) {
        unsetIntentServiceMap();
      } else {
        setIntentServiceMap((Map<String,String>)value);
      }
      break;

    case JOB_REGISTRATIONS:
      if (value == null) {
        unsetJobRegistrations();
      } else {
        setJobRegistrations((Set<JobRegistration>)value);
      }
      break;

    case APP_ICON_SRC:
      if (value == null) {
        unsetAppIconSrc();
      } else {
        setAppIconSrc((String)value);
      }
      break;

    case SPONSORING_ORGANIZATION:
      if (value == null) {
        unsetSponsoringOrganization();
      } else {
        setSponsoringOrganization((String)value);
      }
      break;

    case COMMUNITY_AUTHORIZATIONS:
      if (value == null) {
        unsetCommunityAuthorizations();
      } else {
        setCommunityAuthorizations((Set<String>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case APP_NAME:
      return getAppName();

    case POC:
      return getPoc();

    case ALLOWED_USERS:
      return getAllowedUsers();

    case CATEGORIES:
      return getCategories();

    case FEED_PIPELINES:
      return getFeedPipelines();

    case LISTENER_PIPELINES:
      return getListenerPipelines();

    case WEB_APP:
      return getWebApp();

    case AUTHORIZATIONS:
      return getAuthorizations();

    case AUTHORIZATION_BUILDER:
      return getAuthorizationBuilder();

    case INTENT_SERVICE_MAP:
      return getIntentServiceMap();

    case JOB_REGISTRATIONS:
      return getJobRegistrations();

    case APP_ICON_SRC:
      return getAppIconSrc();

    case SPONSORING_ORGANIZATION:
      return getSponsoringOrganization();

    case COMMUNITY_AUTHORIZATIONS:
      return getCommunityAuthorizations();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case APP_NAME:
      return isSetAppName();
    case POC:
      return isSetPoc();
    case ALLOWED_USERS:
      return isSetAllowedUsers();
    case CATEGORIES:
      return isSetCategories();
    case FEED_PIPELINES:
      return isSetFeedPipelines();
    case LISTENER_PIPELINES:
      return isSetListenerPipelines();
    case WEB_APP:
      return isSetWebApp();
    case AUTHORIZATIONS:
      return isSetAuthorizations();
    case AUTHORIZATION_BUILDER:
      return isSetAuthorizationBuilder();
    case INTENT_SERVICE_MAP:
      return isSetIntentServiceMap();
    case JOB_REGISTRATIONS:
      return isSetJobRegistrations();
    case APP_ICON_SRC:
      return isSetAppIconSrc();
    case SPONSORING_ORGANIZATION:
      return isSetSponsoringOrganization();
    case COMMUNITY_AUTHORIZATIONS:
      return isSetCommunityAuthorizations();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Application)
      return this.equals((Application)that);
    return false;
  }

  public boolean equals(Application that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_appName = true && this.isSetAppName();
    boolean that_present_appName = true && that.isSetAppName();
    if (this_present_appName || that_present_appName) {
      if (!(this_present_appName && that_present_appName))
        return false;
      if (!this.appName.equals(that.appName))
        return false;
    }

    boolean this_present_poc = true && this.isSetPoc();
    boolean that_present_poc = true && that.isSetPoc();
    if (this_present_poc || that_present_poc) {
      if (!(this_present_poc && that_present_poc))
        return false;
      if (!this.poc.equals(that.poc))
        return false;
    }

    boolean this_present_allowedUsers = true && this.isSetAllowedUsers();
    boolean that_present_allowedUsers = true && that.isSetAllowedUsers();
    if (this_present_allowedUsers || that_present_allowedUsers) {
      if (!(this_present_allowedUsers && that_present_allowedUsers))
        return false;
      if (!this.allowedUsers.equals(that.allowedUsers))
        return false;
    }

    boolean this_present_categories = true && this.isSetCategories();
    boolean that_present_categories = true && that.isSetCategories();
    if (this_present_categories || that_present_categories) {
      if (!(this_present_categories && that_present_categories))
        return false;
      if (!this.categories.equals(that.categories))
        return false;
    }

    boolean this_present_feedPipelines = true && this.isSetFeedPipelines();
    boolean that_present_feedPipelines = true && that.isSetFeedPipelines();
    if (this_present_feedPipelines || that_present_feedPipelines) {
      if (!(this_present_feedPipelines && that_present_feedPipelines))
        return false;
      if (!this.feedPipelines.equals(that.feedPipelines))
        return false;
    }

    boolean this_present_listenerPipelines = true && this.isSetListenerPipelines();
    boolean that_present_listenerPipelines = true && that.isSetListenerPipelines();
    if (this_present_listenerPipelines || that_present_listenerPipelines) {
      if (!(this_present_listenerPipelines && that_present_listenerPipelines))
        return false;
      if (!this.listenerPipelines.equals(that.listenerPipelines))
        return false;
    }

    boolean this_present_webApp = true && this.isSetWebApp();
    boolean that_present_webApp = true && that.isSetWebApp();
    if (this_present_webApp || that_present_webApp) {
      if (!(this_present_webApp && that_present_webApp))
        return false;
      if (!this.webApp.equals(that.webApp))
        return false;
    }

    boolean this_present_authorizations = true && this.isSetAuthorizations();
    boolean that_present_authorizations = true && that.isSetAuthorizations();
    if (this_present_authorizations || that_present_authorizations) {
      if (!(this_present_authorizations && that_present_authorizations))
        return false;
      if (!this.authorizations.equals(that.authorizations))
        return false;
    }

    boolean this_present_authorizationBuilder = true && this.isSetAuthorizationBuilder();
    boolean that_present_authorizationBuilder = true && that.isSetAuthorizationBuilder();
    if (this_present_authorizationBuilder || that_present_authorizationBuilder) {
      if (!(this_present_authorizationBuilder && that_present_authorizationBuilder))
        return false;
      if (!this.authorizationBuilder.equals(that.authorizationBuilder))
        return false;
    }

    boolean this_present_intentServiceMap = true && this.isSetIntentServiceMap();
    boolean that_present_intentServiceMap = true && that.isSetIntentServiceMap();
    if (this_present_intentServiceMap || that_present_intentServiceMap) {
      if (!(this_present_intentServiceMap && that_present_intentServiceMap))
        return false;
      if (!this.intentServiceMap.equals(that.intentServiceMap))
        return false;
    }

    boolean this_present_jobRegistrations = true && this.isSetJobRegistrations();
    boolean that_present_jobRegistrations = true && that.isSetJobRegistrations();
    if (this_present_jobRegistrations || that_present_jobRegistrations) {
      if (!(this_present_jobRegistrations && that_present_jobRegistrations))
        return false;
      if (!this.jobRegistrations.equals(that.jobRegistrations))
        return false;
    }

    boolean this_present_appIconSrc = true && this.isSetAppIconSrc();
    boolean that_present_appIconSrc = true && that.isSetAppIconSrc();
    if (this_present_appIconSrc || that_present_appIconSrc) {
      if (!(this_present_appIconSrc && that_present_appIconSrc))
        return false;
      if (!this.appIconSrc.equals(that.appIconSrc))
        return false;
    }

    boolean this_present_sponsoringOrganization = true && this.isSetSponsoringOrganization();
    boolean that_present_sponsoringOrganization = true && that.isSetSponsoringOrganization();
    if (this_present_sponsoringOrganization || that_present_sponsoringOrganization) {
      if (!(this_present_sponsoringOrganization && that_present_sponsoringOrganization))
        return false;
      if (!this.sponsoringOrganization.equals(that.sponsoringOrganization))
        return false;
    }

    boolean this_present_communityAuthorizations = true && this.isSetCommunityAuthorizations();
    boolean that_present_communityAuthorizations = true && that.isSetCommunityAuthorizations();
    if (this_present_communityAuthorizations || that_present_communityAuthorizations) {
      if (!(this_present_communityAuthorizations && that_present_communityAuthorizations))
        return false;
      if (!this.communityAuthorizations.equals(that.communityAuthorizations))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(Application other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppName()).compareTo(other.isSetAppName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appName, other.appName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPoc()).compareTo(other.isSetPoc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.poc, other.poc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAllowedUsers()).compareTo(other.isSetAllowedUsers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAllowedUsers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.allowedUsers, other.allowedUsers);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategories()).compareTo(other.isSetCategories());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategories()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categories, other.categories);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFeedPipelines()).compareTo(other.isSetFeedPipelines());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFeedPipelines()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.feedPipelines, other.feedPipelines);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetListenerPipelines()).compareTo(other.isSetListenerPipelines());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetListenerPipelines()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.listenerPipelines, other.listenerPipelines);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWebApp()).compareTo(other.isSetWebApp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWebApp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.webApp, other.webApp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuthorizations()).compareTo(other.isSetAuthorizations());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthorizations()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authorizations, other.authorizations);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuthorizationBuilder()).compareTo(other.isSetAuthorizationBuilder());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthorizationBuilder()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authorizationBuilder, other.authorizationBuilder);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIntentServiceMap()).compareTo(other.isSetIntentServiceMap());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntentServiceMap()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intentServiceMap, other.intentServiceMap);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobRegistrations()).compareTo(other.isSetJobRegistrations());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobRegistrations()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobRegistrations, other.jobRegistrations);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppIconSrc()).compareTo(other.isSetAppIconSrc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppIconSrc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appIconSrc, other.appIconSrc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSponsoringOrganization()).compareTo(other.isSetSponsoringOrganization());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSponsoringOrganization()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sponsoringOrganization, other.sponsoringOrganization);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCommunityAuthorizations()).compareTo(other.isSetCommunityAuthorizations());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCommunityAuthorizations()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.communityAuthorizations, other.communityAuthorizations);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Application(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      if (this.id == null) {
        sb.append("null");
      } else {
        sb.append(this.id);
      }
      first = false;
    }
    if (isSetAppName()) {
      if (!first) sb.append(", ");
      sb.append("appName:");
      if (this.appName == null) {
        sb.append("null");
      } else {
        sb.append(this.appName);
      }
      first = false;
    }
    if (isSetPoc()) {
      if (!first) sb.append(", ");
      sb.append("poc:");
      if (this.poc == null) {
        sb.append("null");
      } else {
        sb.append(this.poc);
      }
      first = false;
    }
    if (isSetAllowedUsers()) {
      if (!first) sb.append(", ");
      sb.append("allowedUsers:");
      if (this.allowedUsers == null) {
        sb.append("null");
      } else {
        sb.append(this.allowedUsers);
      }
      first = false;
    }
    if (isSetCategories()) {
      if (!first) sb.append(", ");
      sb.append("categories:");
      if (this.categories == null) {
        sb.append("null");
      } else {
        sb.append(this.categories);
      }
      first = false;
    }
    if (isSetFeedPipelines()) {
      if (!first) sb.append(", ");
      sb.append("feedPipelines:");
      if (this.feedPipelines == null) {
        sb.append("null");
      } else {
        sb.append(this.feedPipelines);
      }
      first = false;
    }
    if (isSetListenerPipelines()) {
      if (!first) sb.append(", ");
      sb.append("listenerPipelines:");
      if (this.listenerPipelines == null) {
        sb.append("null");
      } else {
        sb.append(this.listenerPipelines);
      }
      first = false;
    }
    if (isSetWebApp()) {
      if (!first) sb.append(", ");
      sb.append("webApp:");
      if (this.webApp == null) {
        sb.append("null");
      } else {
        sb.append(this.webApp);
      }
      first = false;
    }
    if (isSetAuthorizations()) {
      if (!first) sb.append(", ");
      sb.append("authorizations:");
      if (this.authorizations == null) {
        sb.append("null");
      } else {
        sb.append(this.authorizations);
      }
      first = false;
    }
    if (isSetAuthorizationBuilder()) {
      if (!first) sb.append(", ");
      sb.append("authorizationBuilder:");
      if (this.authorizationBuilder == null) {
        sb.append("null");
      } else {
        sb.append(this.authorizationBuilder);
      }
      first = false;
    }
    if (isSetIntentServiceMap()) {
      if (!first) sb.append(", ");
      sb.append("intentServiceMap:");
      if (this.intentServiceMap == null) {
        sb.append("null");
      } else {
        sb.append(this.intentServiceMap);
      }
      first = false;
    }
    if (isSetJobRegistrations()) {
      if (!first) sb.append(", ");
      sb.append("jobRegistrations:");
      if (this.jobRegistrations == null) {
        sb.append("null");
      } else {
        sb.append(this.jobRegistrations);
      }
      first = false;
    }
    if (isSetAppIconSrc()) {
      if (!first) sb.append(", ");
      sb.append("appIconSrc:");
      if (this.appIconSrc == null) {
        sb.append("null");
      } else {
        sb.append(this.appIconSrc);
      }
      first = false;
    }
    if (isSetSponsoringOrganization()) {
      if (!first) sb.append(", ");
      sb.append("sponsoringOrganization:");
      if (this.sponsoringOrganization == null) {
        sb.append("null");
      } else {
        sb.append(this.sponsoringOrganization);
      }
      first = false;
    }
    if (isSetCommunityAuthorizations()) {
      if (!first) sb.append(", ");
      sb.append("communityAuthorizations:");
      if (this.communityAuthorizations == null) {
        sb.append("null");
      } else {
        sb.append(this.communityAuthorizations);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (webApp != null) {
      webApp.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ApplicationStandardSchemeFactory implements SchemeFactory {
    public ApplicationStandardScheme getScheme() {
      return new ApplicationStandardScheme();
    }
  }

  private static class ApplicationStandardScheme extends StandardScheme<Application> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Application struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // APP_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appName = iprot.readString();
              struct.setAppNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // POC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.poc = iprot.readString();
              struct.setPocIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ALLOWED_USERS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set42 = iprot.readSetBegin();
                struct.allowedUsers = new HashSet<String>(2*_set42.size);
                for (int _i43 = 0; _i43 < _set42.size; ++_i43)
                {
                  String _elem44;
                  _elem44 = iprot.readString();
                  struct.allowedUsers.add(_elem44);
                }
                iprot.readSetEnd();
              }
              struct.setAllowedUsersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CATEGORIES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map45 = iprot.readMapBegin();
                struct.categories = new HashMap<String,String>(2*_map45.size);
                for (int _i46 = 0; _i46 < _map45.size; ++_i46)
                {
                  String _key47;
                  String _val48;
                  _key47 = iprot.readString();
                  _val48 = iprot.readString();
                  struct.categories.put(_key47, _val48);
                }
                iprot.readMapEnd();
              }
              struct.setCategoriesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FEED_PIPELINES
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set49 = iprot.readSetBegin();
                struct.feedPipelines = new HashSet<FeedPipeline>(2*_set49.size);
                for (int _i50 = 0; _i50 < _set49.size; ++_i50)
                {
                  FeedPipeline _elem51;
                  _elem51 = new FeedPipeline();
                  _elem51.read(iprot);
                  struct.feedPipelines.add(_elem51);
                }
                iprot.readSetEnd();
              }
              struct.setFeedPipelinesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // LISTENER_PIPELINES
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set52 = iprot.readSetBegin();
                struct.listenerPipelines = new HashSet<ListenerPipeline>(2*_set52.size);
                for (int _i53 = 0; _i53 < _set52.size; ++_i53)
                {
                  ListenerPipeline _elem54;
                  _elem54 = new ListenerPipeline();
                  _elem54.read(iprot);
                  struct.listenerPipelines.add(_elem54);
                }
                iprot.readSetEnd();
              }
              struct.setListenerPipelinesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // WEB_APP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.webApp = new WebApplication();
              struct.webApp.read(iprot);
              struct.setWebAppIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // AUTHORIZATIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set55 = iprot.readSetBegin();
                struct.authorizations = new HashSet<String>(2*_set55.size);
                for (int _i56 = 0; _i56 < _set55.size; ++_i56)
                {
                  String _elem57;
                  _elem57 = iprot.readString();
                  struct.authorizations.add(_elem57);
                }
                iprot.readSetEnd();
              }
              struct.setAuthorizationsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // AUTHORIZATION_BUILDER
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map58 = iprot.readMapBegin();
                struct.authorizationBuilder = new HashMap<String,Set<String>>(2*_map58.size);
                for (int _i59 = 0; _i59 < _map58.size; ++_i59)
                {
                  String _key60;
                  Set<String> _val61;
                  _key60 = iprot.readString();
                  {
                    org.apache.thrift.protocol.TSet _set62 = iprot.readSetBegin();
                    _val61 = new HashSet<String>(2*_set62.size);
                    for (int _i63 = 0; _i63 < _set62.size; ++_i63)
                    {
                      String _elem64;
                      _elem64 = iprot.readString();
                      _val61.add(_elem64);
                    }
                    iprot.readSetEnd();
                  }
                  struct.authorizationBuilder.put(_key60, _val61);
                }
                iprot.readMapEnd();
              }
              struct.setAuthorizationBuilderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // INTENT_SERVICE_MAP
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map65 = iprot.readMapBegin();
                struct.intentServiceMap = new HashMap<String,String>(2*_map65.size);
                for (int _i66 = 0; _i66 < _map65.size; ++_i66)
                {
                  String _key67;
                  String _val68;
                  _key67 = iprot.readString();
                  _val68 = iprot.readString();
                  struct.intentServiceMap.put(_key67, _val68);
                }
                iprot.readMapEnd();
              }
              struct.setIntentServiceMapIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // JOB_REGISTRATIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set69 = iprot.readSetBegin();
                struct.jobRegistrations = new HashSet<JobRegistration>(2*_set69.size);
                for (int _i70 = 0; _i70 < _set69.size; ++_i70)
                {
                  JobRegistration _elem71;
                  _elem71 = new JobRegistration();
                  _elem71.read(iprot);
                  struct.jobRegistrations.add(_elem71);
                }
                iprot.readSetEnd();
              }
              struct.setJobRegistrationsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // APP_ICON_SRC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appIconSrc = iprot.readString();
              struct.setAppIconSrcIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // SPONSORING_ORGANIZATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sponsoringOrganization = iprot.readString();
              struct.setSponsoringOrganizationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // COMMUNITY_AUTHORIZATIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set72 = iprot.readSetBegin();
                struct.communityAuthorizations = new HashSet<String>(2*_set72.size);
                for (int _i73 = 0; _i73 < _set72.size; ++_i73)
                {
                  String _elem74;
                  _elem74 = iprot.readString();
                  struct.communityAuthorizations.add(_elem74);
                }
                iprot.readSetEnd();
              }
              struct.setCommunityAuthorizationsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Application struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        if (struct.isSetId()) {
          oprot.writeFieldBegin(ID_FIELD_DESC);
          oprot.writeString(struct.id);
          oprot.writeFieldEnd();
        }
      }
      if (struct.appName != null) {
        if (struct.isSetAppName()) {
          oprot.writeFieldBegin(APP_NAME_FIELD_DESC);
          oprot.writeString(struct.appName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.poc != null) {
        if (struct.isSetPoc()) {
          oprot.writeFieldBegin(POC_FIELD_DESC);
          oprot.writeString(struct.poc);
          oprot.writeFieldEnd();
        }
      }
      if (struct.allowedUsers != null) {
        if (struct.isSetAllowedUsers()) {
          oprot.writeFieldBegin(ALLOWED_USERS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, struct.allowedUsers.size()));
            for (String _iter75 : struct.allowedUsers)
            {
              oprot.writeString(_iter75);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.categories != null) {
        if (struct.isSetCategories()) {
          oprot.writeFieldBegin(CATEGORIES_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.categories.size()));
            for (Map.Entry<String, String> _iter76 : struct.categories.entrySet())
            {
              oprot.writeString(_iter76.getKey());
              oprot.writeString(_iter76.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.feedPipelines != null) {
        if (struct.isSetFeedPipelines()) {
          oprot.writeFieldBegin(FEED_PIPELINES_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, struct.feedPipelines.size()));
            for (FeedPipeline _iter77 : struct.feedPipelines)
            {
              _iter77.write(oprot);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.listenerPipelines != null) {
        if (struct.isSetListenerPipelines()) {
          oprot.writeFieldBegin(LISTENER_PIPELINES_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, struct.listenerPipelines.size()));
            for (ListenerPipeline _iter78 : struct.listenerPipelines)
            {
              _iter78.write(oprot);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.webApp != null) {
        if (struct.isSetWebApp()) {
          oprot.writeFieldBegin(WEB_APP_FIELD_DESC);
          struct.webApp.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.authorizations != null) {
        if (struct.isSetAuthorizations()) {
          oprot.writeFieldBegin(AUTHORIZATIONS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, struct.authorizations.size()));
            for (String _iter79 : struct.authorizations)
            {
              oprot.writeString(_iter79);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.authorizationBuilder != null) {
        if (struct.isSetAuthorizationBuilder()) {
          oprot.writeFieldBegin(AUTHORIZATION_BUILDER_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.SET, struct.authorizationBuilder.size()));
            for (Map.Entry<String, Set<String>> _iter80 : struct.authorizationBuilder.entrySet())
            {
              oprot.writeString(_iter80.getKey());
              {
                oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, _iter80.getValue().size()));
                for (String _iter81 : _iter80.getValue())
                {
                  oprot.writeString(_iter81);
                }
                oprot.writeSetEnd();
              }
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.intentServiceMap != null) {
        if (struct.isSetIntentServiceMap()) {
          oprot.writeFieldBegin(INTENT_SERVICE_MAP_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.intentServiceMap.size()));
            for (Map.Entry<String, String> _iter82 : struct.intentServiceMap.entrySet())
            {
              oprot.writeString(_iter82.getKey());
              oprot.writeString(_iter82.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.jobRegistrations != null) {
        if (struct.isSetJobRegistrations()) {
          oprot.writeFieldBegin(JOB_REGISTRATIONS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, struct.jobRegistrations.size()));
            for (JobRegistration _iter83 : struct.jobRegistrations)
            {
              _iter83.write(oprot);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.appIconSrc != null) {
        if (struct.isSetAppIconSrc()) {
          oprot.writeFieldBegin(APP_ICON_SRC_FIELD_DESC);
          oprot.writeString(struct.appIconSrc);
          oprot.writeFieldEnd();
        }
      }
      if (struct.sponsoringOrganization != null) {
        if (struct.isSetSponsoringOrganization()) {
          oprot.writeFieldBegin(SPONSORING_ORGANIZATION_FIELD_DESC);
          oprot.writeString(struct.sponsoringOrganization);
          oprot.writeFieldEnd();
        }
      }
      if (struct.communityAuthorizations != null) {
        if (struct.isSetCommunityAuthorizations()) {
          oprot.writeFieldBegin(COMMUNITY_AUTHORIZATIONS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, struct.communityAuthorizations.size()));
            for (String _iter84 : struct.communityAuthorizations)
            {
              oprot.writeString(_iter84);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ApplicationTupleSchemeFactory implements SchemeFactory {
    public ApplicationTupleScheme getScheme() {
      return new ApplicationTupleScheme();
    }
  }

  private static class ApplicationTupleScheme extends TupleScheme<Application> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Application struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetAppName()) {
        optionals.set(1);
      }
      if (struct.isSetPoc()) {
        optionals.set(2);
      }
      if (struct.isSetAllowedUsers()) {
        optionals.set(3);
      }
      if (struct.isSetCategories()) {
        optionals.set(4);
      }
      if (struct.isSetFeedPipelines()) {
        optionals.set(5);
      }
      if (struct.isSetListenerPipelines()) {
        optionals.set(6);
      }
      if (struct.isSetWebApp()) {
        optionals.set(7);
      }
      if (struct.isSetAuthorizations()) {
        optionals.set(8);
      }
      if (struct.isSetAuthorizationBuilder()) {
        optionals.set(9);
      }
      if (struct.isSetIntentServiceMap()) {
        optionals.set(10);
      }
      if (struct.isSetJobRegistrations()) {
        optionals.set(11);
      }
      if (struct.isSetAppIconSrc()) {
        optionals.set(12);
      }
      if (struct.isSetSponsoringOrganization()) {
        optionals.set(13);
      }
      if (struct.isSetCommunityAuthorizations()) {
        optionals.set(14);
      }
      oprot.writeBitSet(optionals, 15);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetAppName()) {
        oprot.writeString(struct.appName);
      }
      if (struct.isSetPoc()) {
        oprot.writeString(struct.poc);
      }
      if (struct.isSetAllowedUsers()) {
        {
          oprot.writeI32(struct.allowedUsers.size());
          for (String _iter85 : struct.allowedUsers)
          {
            oprot.writeString(_iter85);
          }
        }
      }
      if (struct.isSetCategories()) {
        {
          oprot.writeI32(struct.categories.size());
          for (Map.Entry<String, String> _iter86 : struct.categories.entrySet())
          {
            oprot.writeString(_iter86.getKey());
            oprot.writeString(_iter86.getValue());
          }
        }
      }
      if (struct.isSetFeedPipelines()) {
        {
          oprot.writeI32(struct.feedPipelines.size());
          for (FeedPipeline _iter87 : struct.feedPipelines)
          {
            _iter87.write(oprot);
          }
        }
      }
      if (struct.isSetListenerPipelines()) {
        {
          oprot.writeI32(struct.listenerPipelines.size());
          for (ListenerPipeline _iter88 : struct.listenerPipelines)
          {
            _iter88.write(oprot);
          }
        }
      }
      if (struct.isSetWebApp()) {
        struct.webApp.write(oprot);
      }
      if (struct.isSetAuthorizations()) {
        {
          oprot.writeI32(struct.authorizations.size());
          for (String _iter89 : struct.authorizations)
          {
            oprot.writeString(_iter89);
          }
        }
      }
      if (struct.isSetAuthorizationBuilder()) {
        {
          oprot.writeI32(struct.authorizationBuilder.size());
          for (Map.Entry<String, Set<String>> _iter90 : struct.authorizationBuilder.entrySet())
          {
            oprot.writeString(_iter90.getKey());
            {
              oprot.writeI32(_iter90.getValue().size());
              for (String _iter91 : _iter90.getValue())
              {
                oprot.writeString(_iter91);
              }
            }
          }
        }
      }
      if (struct.isSetIntentServiceMap()) {
        {
          oprot.writeI32(struct.intentServiceMap.size());
          for (Map.Entry<String, String> _iter92 : struct.intentServiceMap.entrySet())
          {
            oprot.writeString(_iter92.getKey());
            oprot.writeString(_iter92.getValue());
          }
        }
      }
      if (struct.isSetJobRegistrations()) {
        {
          oprot.writeI32(struct.jobRegistrations.size());
          for (JobRegistration _iter93 : struct.jobRegistrations)
          {
            _iter93.write(oprot);
          }
        }
      }
      if (struct.isSetAppIconSrc()) {
        oprot.writeString(struct.appIconSrc);
      }
      if (struct.isSetSponsoringOrganization()) {
        oprot.writeString(struct.sponsoringOrganization);
      }
      if (struct.isSetCommunityAuthorizations()) {
        {
          oprot.writeI32(struct.communityAuthorizations.size());
          for (String _iter94 : struct.communityAuthorizations)
          {
            oprot.writeString(_iter94);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Application struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(15);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.appName = iprot.readString();
        struct.setAppNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.poc = iprot.readString();
        struct.setPocIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TSet _set95 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.allowedUsers = new HashSet<String>(2*_set95.size);
          for (int _i96 = 0; _i96 < _set95.size; ++_i96)
          {
            String _elem97;
            _elem97 = iprot.readString();
            struct.allowedUsers.add(_elem97);
          }
        }
        struct.setAllowedUsersIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TMap _map98 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.categories = new HashMap<String,String>(2*_map98.size);
          for (int _i99 = 0; _i99 < _map98.size; ++_i99)
          {
            String _key100;
            String _val101;
            _key100 = iprot.readString();
            _val101 = iprot.readString();
            struct.categories.put(_key100, _val101);
          }
        }
        struct.setCategoriesIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TSet _set102 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.feedPipelines = new HashSet<FeedPipeline>(2*_set102.size);
          for (int _i103 = 0; _i103 < _set102.size; ++_i103)
          {
            FeedPipeline _elem104;
            _elem104 = new FeedPipeline();
            _elem104.read(iprot);
            struct.feedPipelines.add(_elem104);
          }
        }
        struct.setFeedPipelinesIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TSet _set105 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.listenerPipelines = new HashSet<ListenerPipeline>(2*_set105.size);
          for (int _i106 = 0; _i106 < _set105.size; ++_i106)
          {
            ListenerPipeline _elem107;
            _elem107 = new ListenerPipeline();
            _elem107.read(iprot);
            struct.listenerPipelines.add(_elem107);
          }
        }
        struct.setListenerPipelinesIsSet(true);
      }
      if (incoming.get(7)) {
        struct.webApp = new WebApplication();
        struct.webApp.read(iprot);
        struct.setWebAppIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TSet _set108 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.authorizations = new HashSet<String>(2*_set108.size);
          for (int _i109 = 0; _i109 < _set108.size; ++_i109)
          {
            String _elem110;
            _elem110 = iprot.readString();
            struct.authorizations.add(_elem110);
          }
        }
        struct.setAuthorizationsIsSet(true);
      }
      if (incoming.get(9)) {
        {
          org.apache.thrift.protocol.TMap _map111 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.SET, iprot.readI32());
          struct.authorizationBuilder = new HashMap<String,Set<String>>(2*_map111.size);
          for (int _i112 = 0; _i112 < _map111.size; ++_i112)
          {
            String _key113;
            Set<String> _val114;
            _key113 = iprot.readString();
            {
              org.apache.thrift.protocol.TSet _set115 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
              _val114 = new HashSet<String>(2*_set115.size);
              for (int _i116 = 0; _i116 < _set115.size; ++_i116)
              {
                String _elem117;
                _elem117 = iprot.readString();
                _val114.add(_elem117);
              }
            }
            struct.authorizationBuilder.put(_key113, _val114);
          }
        }
        struct.setAuthorizationBuilderIsSet(true);
      }
      if (incoming.get(10)) {
        {
          org.apache.thrift.protocol.TMap _map118 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.intentServiceMap = new HashMap<String,String>(2*_map118.size);
          for (int _i119 = 0; _i119 < _map118.size; ++_i119)
          {
            String _key120;
            String _val121;
            _key120 = iprot.readString();
            _val121 = iprot.readString();
            struct.intentServiceMap.put(_key120, _val121);
          }
        }
        struct.setIntentServiceMapIsSet(true);
      }
      if (incoming.get(11)) {
        {
          org.apache.thrift.protocol.TSet _set122 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.jobRegistrations = new HashSet<JobRegistration>(2*_set122.size);
          for (int _i123 = 0; _i123 < _set122.size; ++_i123)
          {
            JobRegistration _elem124;
            _elem124 = new JobRegistration();
            _elem124.read(iprot);
            struct.jobRegistrations.add(_elem124);
          }
        }
        struct.setJobRegistrationsIsSet(true);
      }
      if (incoming.get(12)) {
        struct.appIconSrc = iprot.readString();
        struct.setAppIconSrcIsSet(true);
      }
      if (incoming.get(13)) {
        struct.sponsoringOrganization = iprot.readString();
        struct.setSponsoringOrganizationIsSet(true);
      }
      if (incoming.get(14)) {
        {
          org.apache.thrift.protocol.TSet _set125 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.communityAuthorizations = new HashSet<String>(2*_set125.size);
          for (int _i126 = 0; _i126 < _set125.size; ++_i126)
          {
            String _elem127;
            _elem127 = iprot.readString();
            struct.communityAuthorizations.add(_elem127);
          }
        }
        struct.setCommunityAuthorizationsIsSet(true);
      }
    }
  }

}

